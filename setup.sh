#!/bin/bash

# ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
# ‚îÇ           üöÄ ETOZHEDEX DOTFILES INSTALLER                   ‚îÇ
# ‚îÇ              –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ñ–∏–≥–æ–≤              ‚îÇ
# ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ

set -e

# üé® –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
MAGENTA='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# üìÅ –ü—É—Ç–∏
DOTFILES_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
BACKUP_DIR="$HOME/.dotfiles_backup_$(date +%Y%m%d_%H%M%S)"

# üéØ –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_header() {
    echo -e "\n${MAGENTA}‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ${NC}"
    echo -e "${MAGENTA}‚îÇ${NC} $1"
    echo -e "${MAGENTA}‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ${NC}\n"
}

print_step() {
    echo -e "${BLUE}‚ñ∂${NC} $1"
}

print_success() {
    echo -e "${GREEN}‚úì${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}‚ö†${NC} $1"
}

print_error() {
    echo -e "${RED}‚úó${NC} $1"
}

# üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
check_requirements() {
    print_step "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è..."
    
    local missing_tools=()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    if ! command -v git &> /dev/null; then
        missing_tools+=("git")
    fi
    
    if ! command -v curl &> /dev/null; then
        missing_tools+=("curl")
    fi
    
    # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥ nvim –Ω–µ —Ç—Ä–µ–±—É–µ—Ç make
    
    if [[ ${#missing_tools[@]} -gt 0 ]]; then
        print_warning "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: ${missing_tools[*]}"
        echo -e "${YELLOW}–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏—Ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏? (y/N)${NC} "
        read -r install_missing
        
        if [[ "$install_missing" =~ ^[Yy]$ ]]; then
            print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã..."
            case $OS in
                "macos")
                    for tool in "${missing_tools[@]}"; do
                        brew install "$tool"
                    done
                    ;;
                "ubuntu")
                    sudo apt update
                    sudo apt install -y "${missing_tools[@]}"
                    ;;
                "arch")
                    sudo pacman -S --noconfirm "${missing_tools[@]}"
                    ;;
            esac
        else
            print_error "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞ –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"
            exit 1
        fi
    fi
    
    print_success "–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"
}

# üîç –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –û–°
detect_os() {
    if [[ "$OSTYPE" == "darwin"* ]]; then
        OS="macos"
        PACKAGE_MANAGER="brew"
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        if command -v apt &> /dev/null; then
            OS="ubuntu"
            PACKAGE_MANAGER="apt"
        elif command -v yum &> /dev/null; then
            OS="centos"
            PACKAGE_MANAGER="yum"
        elif command -v pacman &> /dev/null; then
            OS="arch"
            PACKAGE_MANAGER="pacman"
        else
            print_error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤ Linux"
            exit 1
        fi
    else
        print_error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: $OSTYPE"
        exit 1
    fi
    
    print_success "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –û–°: $OS"
}

# üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
install_package_manager() {
    if [[ "$OS" == "macos" ]]; then
        if ! command -v brew &> /dev/null; then
            print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Homebrew..."
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            
            # –î–æ–±–∞–≤–ª—è–µ–º Homebrew –≤ PATH –¥–ª—è Apple Silicon
            if [[ $(uname -m) == "arm64" ]]; then
                echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
                eval "$(/opt/homebrew/bin/brew shellenv)"
            fi
            
            print_success "Homebrew —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        else
            print_success "Homebrew —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi
    fi
}

# üõ†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã..."
    
    case $OS in
        "macos")
            brew update
            brew install tmux neovim eza fzf git curl wget python3
            brew install zsh-autosuggestions zsh-syntax-highlighting
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º thefuck –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if ! command -v thefuck &> /dev/null; then
                print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º thefuck..."
                pip3 install --user thefuck || brew install thefuck
            fi
            ;;
        "ubuntu")
            sudo apt update
            sudo apt install -y tmux neovim git curl wget zsh fzf xclip python3 python3-pip
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º eza
            if ! command -v eza &> /dev/null; then
                print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º eza..."
                wget -c https://github.com/eza-community/eza/releases/latest/download/eza_x86_64-unknown-linux-gnu.tar.gz -O - | tar xz
                sudo chmod +x eza
                sudo mv eza /usr/local/bin/
            fi
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º zsh –ø–ª–∞–≥–∏–Ω—ã
            if [[ ! -d "/usr/share/zsh-autosuggestions" ]]; then
                sudo apt install -y zsh-autosuggestions zsh-syntax-highlighting
            fi
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º thefuck
            if ! command -v thefuck &> /dev/null; then
                print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º thefuck..."
                pip3 install --user thefuck
            fi
            ;;
        "arch")
            sudo pacman -Syu --noconfirm
            sudo pacman -S --noconfirm tmux neovim git curl wget zsh fzf python python-pip
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º eza
            if ! command -v eza &> /dev/null; then
                print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º eza..."
                sudo pacman -S --noconfirm eza || {
                    if command -v yay &> /dev/null; then
                        yay -S --noconfirm eza
                    fi
                }
            fi
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º zsh –ø–ª–∞–≥–∏–Ω—ã
            sudo pacman -S --noconfirm zsh-autosuggestions zsh-syntax-highlighting || true
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º thefuck
            if ! command -v thefuck &> /dev/null; then
                print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º thefuck..."
                pip install --user thefuck || {
                    if command -v yay &> /dev/null; then
                        yay -S --noconfirm thefuck
                    fi
                }
            fi
            ;;
    esac
    
    print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ñ–∏–≥–æ–≤
backup_existing_configs() {
    print_step "–°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π..."
    
    mkdir -p "$BACKUP_DIR"
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –±—ç–∫–∞–ø–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    configs=()
    
    if [[ "$INSTALL_ZSH" == "true" ]]; then
        configs+=("$HOME/.zshrc")
        configs+=("$HOME/.oh-my-zsh/themes/dex.zsh-theme")
        configs+=("$HOME/.oh-my-zsh/themes/fuck.zsh-theme")
    fi
    
    if [[ "$INSTALL_TMUX" == "true" ]]; then
        configs+=("$HOME/.tmux.conf")
    fi
    
    if [[ "$INSTALL_NVIM" == "true" ]]; then
        configs+=("$HOME/.config/nvim")
    fi
    
    for config in "${configs[@]}"; do
        if [[ -e "$config" ]]; then
            cp -r "$config" "$BACKUP_DIR/" 2>/dev/null || true
            print_success "–°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: $(basename "$config")"
        fi
    done
    
    if [[ -n "$(ls -A "$BACKUP_DIR" 2>/dev/null)" ]]; then
        print_success "–ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω –≤: $BACKUP_DIR"
    else
        rmdir "$BACKUP_DIR"
        print_success "–ë—ç–∫–∞–ø –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
    fi
}

# üêö –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Oh My Zsh
install_oh_my_zsh() {
    if [[ ! -d "$HOME/.oh-my-zsh" ]]; then
        print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Oh My Zsh..."
        sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
        print_success "Oh My Zsh —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        print_success "Oh My Zsh —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# üé® –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Zsh –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
install_zsh_config() {
    print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Zsh –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
    
    # –ö–æ–ø–∏—Ä—É–µ–º .zshrc
    if [[ -f "$DOTFILES_DIR/zsh/.zshrc" ]]; then
        cp "$DOTFILES_DIR/zsh/.zshrc" "$HOME/.zshrc"
        print_success "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω .zshrc"
    else
        print_error "–§–∞–π–ª zsh/.zshrc –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ–º
    mkdir -p "$HOME/.oh-my-zsh/themes"
    
    # –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã
    local themes_installed=0
    
    if [[ -f "$DOTFILES_DIR/zsh/dex.zsh-theme" ]]; then
        cp "$DOTFILES_DIR/zsh/dex.zsh-theme" "$HOME/.oh-my-zsh/themes/dex.zsh-theme"
        print_success "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ —Ç–µ–º–∞ dex"
        themes_installed=1
    fi
    
    if [[ -f "$DOTFILES_DIR/zsh/fuck.zsh-theme" ]]; then
        cp "$DOTFILES_DIR/zsh/fuck.zsh-theme" "$HOME/.oh-my-zsh/themes/fuck.zsh-theme"
        print_success "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ —Ç–µ–º–∞ fuck"
        themes_installed=1
    fi
    
    if [[ $themes_installed -eq 0 ]]; then
        print_warning "–¢–µ–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ —Ç–µ–º–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º zsh –∫–∞–∫ shell –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    if [[ "$SHELL" != "$(which zsh)" ]]; then
        print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º zsh –∫–∞–∫ shell –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é..."
        chsh -s "$(which zsh)"
        print_success "Zsh —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ shell –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
    fi
}

# üñ•Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Tmux –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
install_tmux_config() {
    print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Tmux –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
    
    # –ö–æ–ø–∏—Ä—É–µ–º .tmux.conf
    if [[ -f "$DOTFILES_DIR/tmux/.tmux.conf" ]]; then
        cp "$DOTFILES_DIR/tmux/.tmux.conf" "$HOME/.tmux.conf"
        print_success "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω .tmux.conf"
    else
        print_error "–§–∞–π–ª tmux/.tmux.conf –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º TPM (Tmux Plugin Manager)
    if [[ ! -d "$HOME/.tmux/plugins/tpm" ]]; then
        print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º TPM (Tmux Plugin Manager)..."
        git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
        print_success "TPM —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        print_success "TPM —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# ‚ö° –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Neovim –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
install_neovim_config() {
    print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Neovim –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    mkdir -p "$HOME/.config/nvim"
    
    # –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Neovim
    if [[ -f "$DOTFILES_DIR/nvim/.nvim.conf" ]]; then
        cp "$DOTFILES_DIR/nvim/.nvim.conf" "$HOME/.config/nvim/init.lua"
        print_success "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω init.lua"
    else
        print_error "–§–∞–π–ª nvim/.nvim.conf –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    # lazy.nvim –∏ –ø–ª–∞–≥–∏–Ω—ã —É—Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
    print_success "Neovim –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ (Catppuccin —Ç–µ–º–∞ –∏ Treesitter —É—Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ)"
}

# üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
install_additional_tools() {
    print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã..."
    
    # fzf –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
    if command -v fzf &> /dev/null; then
        if [[ ! -f "$HOME/.fzf.zsh" ]]; then
            print_step "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º fzf –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é..."
            if [[ "$OS" == "macos" ]]; then
                $(brew --prefix)/opt/fzf/install --all --no-bash --no-fish
            else
                /usr/share/doc/fzf/examples/install --all --no-bash --no-fish 2>/dev/null || true
            fi
            print_success "fzf –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
        fi
    fi
    
    # –°–æ–∑–¥–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    if [[ ! -L "$HOME/.dotfiles" ]]; then
        ln -sf "$DOTFILES_DIR" "$HOME/.dotfiles"
        print_success "–°–æ–∑–¥–∞–Ω–∞ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ ~/.dotfiles"
    fi
}

# üîó –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
create_symlinks() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ª–∏ –∫–∞–∫–∏–µ-–ª–∏–±–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    if [[ "$INSTALL_ZSH" != "true" && "$INSTALL_TMUX" != "true" && "$INSTALL_NVIM" != "true" ]]; then
        return 0
    fi
    
    print_step "–°–æ–∑–¥–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏..."
    
    echo -e "\n${YELLOW}–•–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ –≤–º–µ—Å—Ç–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤?${NC}"
    echo -e "${CYAN}–≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º.${NC}"
    echo -e "${YELLOW}–°–æ–∑–¥–∞—Ç—å —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏? (y/N)${NC} "
    read -r symlink_response
    
    if [[ "$symlink_response" =~ ^[Yy]$ ]]; then
        # –°–æ–∑–¥–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        if [[ "$INSTALL_ZSH" == "true" ]]; then
            rm -f "$HOME/.zshrc"
            ln -sf "$DOTFILES_DIR/zsh/.zshrc" "$HOME/.zshrc"
            
            # –°–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è —Ç–µ–º
            mkdir -p "$HOME/.oh-my-zsh/themes"
            [[ -f "$DOTFILES_DIR/zsh/dex.zsh-theme" ]] && ln -sf "$DOTFILES_DIR/zsh/dex.zsh-theme" "$HOME/.oh-my-zsh/themes/dex.zsh-theme"
            [[ -f "$DOTFILES_DIR/zsh/fuck.zsh-theme" ]] && ln -sf "$DOTFILES_DIR/zsh/fuck.zsh-theme" "$HOME/.oh-my-zsh/themes/fuck.zsh-theme"
        fi
        
        if [[ "$INSTALL_TMUX" == "true" ]]; then
            rm -f "$HOME/.tmux.conf"
            ln -sf "$DOTFILES_DIR/tmux/.tmux.conf" "$HOME/.tmux.conf"
        fi
        
        if [[ "$INSTALL_NVIM" == "true" ]]; then
            rm -rf "$HOME/.config/nvim"
            mkdir -p "$HOME/.config/nvim"
            ln -sf "$DOTFILES_DIR/nvim/.nvim.conf" "$HOME/.config/nvim/init.lua"
        fi
        
        print_success "–°–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ —Å–æ–∑–¥–∞–Ω—ã - –∫–æ–Ω—Ñ–∏–≥–∏ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è"
    else
        print_success "–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–æ–ø–∏–∏ —Ñ–∞–π–ª–æ–≤"
    fi
}

# üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
verify_installation() {
    print_step "–ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤..."
    
    local errors=0
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    if [[ "$INSTALL_ZSH" == "true" ]] && [[ ! -f "$HOME/.zshrc" ]]; then
        print_error ".zshrc –Ω–µ –Ω–∞–π–¥–µ–Ω"
        errors=$((errors + 1))
    fi
    
    if [[ "$INSTALL_TMUX" == "true" ]] && [[ ! -f "$HOME/.tmux.conf" ]]; then
        print_error ".tmux.conf –Ω–µ –Ω–∞–π–¥–µ–Ω"
        errors=$((errors + 1))
    fi
    
    if [[ "$INSTALL_NVIM" == "true" ]] && [[ ! -f "$HOME/.config/nvim/init.lua" ]]; then
        print_error "Neovim –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        errors=$((errors + 1))
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    local commands=("git")
    [[ "$INSTALL_ZSH" == "true" ]] && commands+=("zsh")
    [[ "$INSTALL_TMUX" == "true" ]] && commands+=("tmux")
    [[ "$INSTALL_NVIM" == "true" ]] && commands+=("nvim")
    
    for cmd in "${commands[@]}"; do
        if ! command -v "$cmd" &> /dev/null; then
            print_error "–ö–æ–º–∞–Ω–¥–∞ $cmd –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
            errors=$((errors + 1))
        fi
    done
    
    if [[ $errors -eq 0 ]]; then
        print_success "–í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        print_warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ $errors –æ—à–∏–±–æ–∫ –≤ —É—Å—Ç–∞–Ω–æ–≤–∫–µ"
    fi
    
    return $errors
}

# üéØ –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
final_setup() {
    print_step "–í—ã–ø–æ–ª–Ω—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É..."
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    chmod +x "$HOME/.dotfiles/setup.sh" 2>/dev/null || true
    
    # –î–æ–±–∞–≤–ª—è–µ–º ~/.local/bin –≤ PATH –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç
    if [[ "$INSTALL_ZSH" == "true" ]] && [[ -f "$HOME/.zshrc" ]]; then
        if ! grep -q 'export PATH="$HOME/.local/bin:$PATH"' "$HOME/.zshrc" 2>/dev/null; then
            echo "" >> "$HOME/.zshrc"
            echo "# Add ~/.local/bin to PATH for user-installed packages" >> "$HOME/.zshrc"
            echo 'export PATH="$HOME/.local/bin:$PATH"' >> "$HOME/.zshrc"
            print_success "–î–æ–±–∞–≤–ª–µ–Ω ~/.local/bin –≤ PATH"
        fi
    fi
    
    # –°–æ–∑–¥–∞–µ–º –∞–ª–∏–∞—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    if [[ "$INSTALL_ZSH" == "true" ]] && ! grep -q "alias dotfiles-update" "$HOME/.zshrc" 2>/dev/null; then
        echo "" >> "$HOME/.zshrc"
        echo "# Dotfiles management" >> "$HOME/.zshrc"
        echo "alias dotfiles-update='cd ~/.dotfiles && git pull && ./setup.sh'" >> "$HOME/.zshrc"
        echo "alias dotfiles-edit='cd ~/.dotfiles && nvim .'" >> "$HOME/.zshrc"
        print_success "–î–æ–±–∞–≤–ª–µ–Ω—ã –∞–ª–∏–∞—Å—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è dotfiles"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
    verify_installation
    
    print_success "–§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# üìã –ü–æ–∫–∞–∑–∞—Ç—å –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
show_final_info() {
    print_header "üéâ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
    
    echo -e "${GREEN}–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:${NC}"
    
    if [[ "$INSTALL_ZSH" == "true" ]]; then
        echo -e "  ${CYAN}‚Ä¢${NC} Zsh —Å Oh My Zsh –∏ –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —Ç–µ–º–∞–º–∏ (dex, fuck)"
    fi
    
    if [[ "$INSTALL_TMUX" == "true" ]]; then
        echo -e "  ${CYAN}‚Ä¢${NC} Tmux —Å Catppuccin Mocha —Ç–µ–º–æ–π"
    fi
    
    if [[ "$INSTALL_NVIM" == "true" ]]; then
        echo -e "  ${CYAN}‚Ä¢${NC} Neovim –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥ —Å Catppuccin —Ç–µ–º–æ–π –∏ –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞"
    fi
    
    echo -e "  ${CYAN}‚Ä¢${NC} –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: eza, fzf, thefuck"
    
    echo -e "\n${YELLOW}–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
    local step=1
    
    if [[ "$INSTALL_ZSH" == "true" ]]; then
        echo -e "  ${CYAN}${step}.${NC} –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: ${BLUE}exec zsh${NC}"
        echo -e "  ${CYAN}$((step+1)).${NC} –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã zsh: ${BLUE}dex${NC} –∏ ${BLUE}fuck${NC} (—Ç–µ–∫—É—â–∞—è: fuck)"
        echo -e "  ${CYAN}$((step+2)).${NC} –ï—Å–ª–∏ thefuck –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: ${BLUE}source ~/.zshrc${NC}"
        step=$((step+3))
    fi
    
    if [[ "$INSTALL_TMUX" == "true" ]]; then
        echo -e "  ${CYAN}${step}.${NC} –ó–∞–ø—É—Å—Ç–∏—Ç–µ tmux - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
        step=$((step+1))
    fi
    
    if [[ "$INSTALL_NVIM" == "true" ]]; then
        echo -e "  ${CYAN}${step}.${NC} –û—Ç–∫—Ä–æ–π—Ç–µ nvim - Catppuccin —Ç–µ–º–∞ –∏ Treesitter —É—Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
        step=$((step+1))
    fi
    
    echo -e "  ${CYAN}${step}.${NC} –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ${BLUE}dotfiles-update${NC} –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π"
    
    if [[ -d "$BACKUP_DIR" ]]; then
        echo -e "\n${YELLOW}–ë—ç–∫–∞–ø —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π:${NC} $BACKUP_DIR"
    fi
    
    echo -e "\n${BLUE}üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:${NC}"
    if [[ "$INSTALL_ZSH" == "true" ]]; then
        echo -e "  ${CYAN}‚Ä¢${NC} Zsh: ${BLUE}cat ~/.dotfiles/zsh/README.md${NC}"
    fi
    if [[ "$INSTALL_TMUX" == "true" ]]; then
        echo -e "  ${CYAN}‚Ä¢${NC} Tmux: ${BLUE}cat ~/.dotfiles/tmux/README.md${NC}"
    fi
    if [[ "$INSTALL_NVIM" == "true" ]]; then
        echo -e "  ${CYAN}‚Ä¢${NC} Neovim: ${BLUE}cat ~/.dotfiles/nvim/README.md${NC}"
    fi
    
    echo -e "\n${MAGENTA}–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∫—Ä–∞—Å–∏–≤–æ–π –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏! üöÄ${NC}"
}

# ÔøΩ –ü–æ–∫–∞–∑–∞—Ç—è—å —Å–ø—Ä–∞–≤–∫—É
show_help() {
    echo -e "${MAGENTA}‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ${NC}"
    echo -e "${MAGENTA}‚îÇ${NC}           üöÄ ETOZHEDEX DOTFILES INSTALLER HELP             ${MAGENTA}‚îÇ${NC}"
    echo -e "${MAGENTA}‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ${NC}"
    
    echo -e "\n${YELLOW}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:${NC}"
    echo -e "  ${BLUE}./setup.sh${NC}          - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞"
    echo -e "  ${BLUE}./setup.sh --help${NC}   - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo -e "  ${BLUE}./setup.sh --full${NC}   - –ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–µ–∑ –≤–æ–ø—Ä–æ—Å–æ–≤"
    echo -e "  ${BLUE}./setup.sh --zsh${NC}    - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ Zsh"
    echo -e "  ${BLUE}./setup.sh --tmux${NC}   - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ Tmux"
    echo -e "  ${BLUE}./setup.sh --nvim${NC}   - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ Neovim"
    
    echo -e "\n${YELLOW}–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:${NC}"
    echo -e "  ${GREEN}Zsh${NC}     - Oh My Zsh + –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ç–µ–º—ã (dex, fuck)"
    echo -e "  ${GREEN}Tmux${NC}    - Catppuccin Mocha —Ç–µ–º–∞ + —É–¥–æ–±–Ω—ã–µ —Ö–æ—Ç–∫–µ–∏"
    echo -e "  ${GREEN}Neovim${NC}  - –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥ —Å Catppuccin —Ç–µ–º–æ–π –∏ –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞"
    
    echo -e "\n${YELLOW}–ü—Ä–∏–º–µ—Ä—ã:${NC}"
    echo -e "  ${BLUE}./setup.sh --full${NC}              # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ"
    echo -e "  ${BLUE}./setup.sh --zsh --tmux${NC}        # –¢–æ–ª—å–∫–æ Zsh –∏ Tmux"
    echo -e "  ${BLUE}./setup.sh --nvim${NC}              # –¢–æ–ª—å–∫–æ Neovim"
    
    echo -e "\n${CYAN}–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–∂–¥–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ${NC}"
    echo -e "${CYAN}—Å–º–æ—Ç—Ä–∏—Ç–µ README.md —Ñ–∞–π–ª—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–∞–ø–∫–∞—Ö.${NC}"
}

# üöÄ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    INSTALL_ZSH=false
    INSTALL_TMUX=false
    INSTALL_NVIM=false
    
    case "${1:-}" in
        --help|-h)
            show_help
            exit 0
            ;;
        --full)
            INSTALL_ZSH=true
            INSTALL_TMUX=true
            INSTALL_NVIM=true
            ;;
        --zsh)
            INSTALL_ZSH=true
            shift
            while [[ $# -gt 0 ]]; do
                case $1 in
                    --tmux) INSTALL_TMUX=true ;;
                    --nvim) INSTALL_NVIM=true ;;
                esac
                shift
            done
            ;;
        --tmux)
            INSTALL_TMUX=true
            shift
            while [[ $# -gt 0 ]]; do
                case $1 in
                    --zsh) INSTALL_ZSH=true ;;
                    --nvim) INSTALL_NVIM=true ;;
                esac
                shift
            done
            ;;
        --nvim)
            INSTALL_NVIM=true
            shift
            while [[ $# -gt 0 ]]; do
                case $1 in
                    --zsh) INSTALL_ZSH=true ;;
                    --tmux) INSTALL_TMUX=true ;;
                esac
                shift
            done
            ;;
        "")
            # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º - –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω –Ω–∏–∂–µ
            ;;
        *)
            print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç: $1"
            echo -e "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ${BLUE}--help${NC} –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
            exit 1
            ;;
    esac
    
    print_header "üéØ –£–°–¢–ê–ù–û–í–ö–ê DOTFILES ETOZHEDEX"
    
    echo -e "${CYAN}–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç:${NC}"
    echo -e "  ‚Ä¢ ${GREEN}Zsh${NC} —Å Oh My Zsh –∏ –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —Ç–µ–º–∞–º–∏ (dex, fuck)"
    echo -e "  ‚Ä¢ ${GREEN}Tmux${NC} —Å Catppuccin Mocha —Ç–µ–º–æ–π –∏ —É–¥–æ–±–Ω—ã–º–∏ —Ö–æ—Ç–∫–µ—è–º–∏"
    echo -e "  ‚Ä¢ ${GREEN}Neovim${NC} –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥ —Å Catppuccin —Ç–µ–º–æ–π –∏ –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞"
    echo -e "  ‚Ä¢ ${GREEN}–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã${NC}: eza, fzf, thefuck"
    
    echo -e "\n${BLUE}üìÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:${NC}"
    echo -e "  ${YELLOW}zsh/${NC}"
    echo -e "    ‚îú‚îÄ‚îÄ .zshrc (–æ—Å–Ω–æ–≤–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è)"
    echo -e "    ‚îú‚îÄ‚îÄ dex.zsh-theme (Catppuccin —Ç–µ–º–∞ —Å git —Å—Ç–∞—Ç—É—Å–æ–º)"
    echo -e "    ‚îî‚îÄ‚îÄ fuck.zsh-theme (–º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è —Ç–µ–º–∞)"
    echo -e "  ${YELLOW}tmux/${NC}"
    echo -e "    ‚îî‚îÄ‚îÄ .tmux.conf (Catppuccin —Ç–µ–º–∞, mouse support)"
    echo -e "  ${YELLOW}nvim/${NC}"
    echo -e "    ‚îî‚îÄ‚îÄ .nvim.conf (–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥ —Å —Ç–µ–º–æ–π –∏ –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π)"
    
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    if [[ "$INSTALL_ZSH" == "false" && "$INSTALL_TMUX" == "false" && "$INSTALL_NVIM" == "false" ]]; then
        echo -e "\n${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —É—Å—Ç–∞–Ω–æ–≤–∫–∏:${NC}"
        echo -e "  ${CYAN}1.${NC} –ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ (–≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã)"
        echo -e "  ${CYAN}2.${NC} –í—ã–±–æ—Ä–æ—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞"
        echo -e "  ${CYAN}3.${NC} –û—Ç–º–µ–Ω–∞"
        echo -e "\n${YELLOW}–í–∞—à –≤—ã–±–æ—Ä (1-3):${NC} "
        read -r install_mode
        
        case $install_mode in
            1)
                INSTALL_ZSH=true
                INSTALL_TMUX=true
                INSTALL_NVIM=true
                ;;
            2)
                echo -e "\n${YELLOW}–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Zsh –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é? (y/N)${NC} "
                read -r zsh_response
                INSTALL_ZSH=$([[ "$zsh_response" =~ ^[Yy]$ ]] && echo true || echo false)
                
                echo -e "${YELLOW}–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Tmux –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é? (y/N)${NC} "
                read -r tmux_response
                INSTALL_TMUX=$([[ "$tmux_response" =~ ^[Yy]$ ]] && echo true || echo false)
                
                echo -e "${YELLOW}–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Neovim –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é? (y/N)${NC} "
                read -r nvim_response
                INSTALL_NVIM=$([[ "$nvim_response" =~ ^[Yy]$ ]] && echo true || echo false)
                ;;
            3|*)
                print_warning "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
                exit 0
                ;;
        esac
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—ã–±—Ä–∞–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
    if [[ "$INSTALL_ZSH" == "false" && "$INSTALL_TMUX" == "false" && "$INSTALL_NVIM" == "false" ]]; then
        print_warning "–ù–µ –≤—ã–±—Ä–∞–Ω –Ω–∏ –æ–¥–∏–Ω –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
        exit 0
    fi
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
    detect_os
    check_requirements
    install_package_manager
    install_dependencies
    backup_existing_configs
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    if [[ "$INSTALL_ZSH" == "true" ]]; then
        install_oh_my_zsh
        install_zsh_config
    fi
    
    if [[ "$INSTALL_TMUX" == "true" ]]; then
        install_tmux_config
    fi
    
    if [[ "$INSTALL_NVIM" == "true" ]]; then
        install_neovim_config
    fi
    
    install_additional_tools
    create_symlinks
    final_setup
    show_final_info
}

# üé¨ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi