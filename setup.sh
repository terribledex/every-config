#!/bin/bash

# ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
# ‚îÇ           üöÄ ETOZHEDEX DOTFILES INSTALLER                   ‚îÇ
# ‚îÇ              –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ñ–∏–≥–æ–≤              ‚îÇ
# ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ

set -e

# üé® –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
MAGENTA='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# üìÅ –ü—É—Ç–∏
DOTFILES_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
BACKUP_DIR="$HOME/.dotfiles_backup_$(date +%Y%m%d_%H%M%S)"

# üéØ –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_header() {
    echo -e "\n${MAGENTA}‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ${NC}"
    echo -e "${MAGENTA}‚îÇ${NC} $1"
    echo -e "${MAGENTA}‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ${NC}\n"
}

print_step() {
    echo -e "${BLUE}‚ñ∂${NC} $1"
}

print_success() {
    echo -e "${GREEN}‚úì${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}‚ö†${NC} $1"
}

print_error() {
    echo -e "${RED}‚úó${NC} $1"
}

# üîç –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –û–°
detect_os() {
    if [[ "$OSTYPE" == "darwin"* ]]; then
        OS="macos"
        PACKAGE_MANAGER="brew"
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        if command -v apt &> /dev/null; then
            OS="ubuntu"
            PACKAGE_MANAGER="apt"
        elif command -v yum &> /dev/null; then
            OS="centos"
            PACKAGE_MANAGER="yum"
        elif command -v pacman &> /dev/null; then
            OS="arch"
            PACKAGE_MANAGER="pacman"
        else
            print_error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤ Linux"
            exit 1
        fi
    else
        print_error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: $OSTYPE"
        exit 1
    fi
    
    print_success "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –û–°: $OS"
}

# üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
install_package_manager() {
    if [[ "$OS" == "macos" ]]; then
        if ! command -v brew &> /dev/null; then
            print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Homebrew..."
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            
            # –î–æ–±–∞–≤–ª—è–µ–º Homebrew –≤ PATH –¥–ª—è Apple Silicon
            if [[ $(uname -m) == "arm64" ]]; then
                echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
                eval "$(/opt/homebrew/bin/brew shellenv)"
            fi
            
            print_success "Homebrew —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        else
            print_success "Homebrew —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi
    fi
}

# üõ†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã..."
    
    case $OS in
        "macos")
            brew update
            brew install tmux neovim eza fzf git curl wget
            brew install zsh-autosuggestions zsh-syntax-highlighting
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º thefuck –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if ! command -v thefuck &> /dev/null; then
                brew install thefuck
            fi
            ;;
        "ubuntu")
            sudo apt update
            sudo apt install -y tmux neovim git curl wget zsh fzf xclip
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º eza
            if ! command -v eza &> /dev/null; then
                wget -c https://github.com/eza-community/eza/releases/latest/download/eza_x86_64-unknown-linux-gnu.tar.gz -O - | tar xz
                sudo chmod +x eza
                sudo mv eza /usr/local/bin/
            fi
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º thefuck
            if ! command -v thefuck &> /dev/null; then
                pip3 install thefuck
            fi
            ;;
        "arch")
            sudo pacman -Syu --noconfirm
            sudo pacman -S --noconfirm tmux neovim git curl wget zsh fzf eza
            
            # AUR –ø–∞–∫–µ—Ç—ã
            if command -v yay &> /dev/null; then
                yay -S --noconfirm thefuck
            fi
            ;;
    esac
    
    print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ñ–∏–≥–æ–≤
backup_existing_configs() {
    print_step "–°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π..."
    
    mkdir -p "$BACKUP_DIR"
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –±—ç–∫–∞–ø–∞
    configs=(
        "$HOME/.zshrc"
        "$HOME/.tmux.conf"
        "$HOME/.config/nvim"
        "$HOME/.oh-my-zsh/themes/minimal-git.zsh-theme"
    )
    
    for config in "${configs[@]}"; do
        if [[ -e "$config" ]]; then
            cp -r "$config" "$BACKUP_DIR/" 2>/dev/null || true
            print_success "–°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: $(basename "$config")"
        fi
    done
    
    if [[ -n "$(ls -A "$BACKUP_DIR" 2>/dev/null)" ]]; then
        print_success "–ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω –≤: $BACKUP_DIR"
    else
        rmdir "$BACKUP_DIR"
        print_success "–ë—ç–∫–∞–ø –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
    fi
}

# üêö –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Oh My Zsh
install_oh_my_zsh() {
    if [[ ! -d "$HOME/.oh-my-zsh" ]]; then
        print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Oh My Zsh..."
        sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
        print_success "Oh My Zsh —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        print_success "Oh My Zsh —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# üé® –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Zsh –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
install_zsh_config() {
    print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Zsh –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
    
    # –ö–æ–ø–∏—Ä—É–µ–º .zshrc
    if [[ -f "$DOTFILES_DIR/zsh/.zshrc" ]]; then
        cp "$DOTFILES_DIR/zsh/.zshrc" "$HOME/.zshrc"
        print_success "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω .zshrc"
    else
        print_error "–§–∞–π–ª zsh/.zshrc –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ç–µ–º—É
    if [[ -f "$DOTFILES_DIR/zsh/.zsh-theme" ]]; then
        mkdir -p "$HOME/.oh-my-zsh/themes"
        cp "$DOTFILES_DIR/zsh/.zsh-theme" "$HOME/.oh-my-zsh/themes/minimal-git.zsh-theme"
        print_success "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ —Ç–µ–º–∞ minimal-git"
    else
        print_error "–§–∞–π–ª zsh/.zsh-theme –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º zsh –∫–∞–∫ shell –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    if [[ "$SHELL" != "$(which zsh)" ]]; then
        print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º zsh –∫–∞–∫ shell –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é..."
        chsh -s "$(which zsh)"
        print_success "Zsh —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ shell –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
    fi
}

# üñ•Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Tmux –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
install_tmux_config() {
    print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Tmux –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
    
    # –ö–æ–ø–∏—Ä—É–µ–º .tmux.conf
    if [[ -f "$DOTFILES_DIR/tmux/.tmux.conf" ]]; then
        cp "$DOTFILES_DIR/tmux/.tmux.conf" "$HOME/.tmux.conf"
        print_success "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω .tmux.conf"
    else
        print_error "–§–∞–π–ª tmux/.tmux.conf –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º TPM (Tmux Plugin Manager)
    if [[ ! -d "$HOME/.tmux/plugins/tpm" ]]; then
        print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º TPM (Tmux Plugin Manager)..."
        git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
        print_success "TPM —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        print_success "TPM —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# ‚ö° –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Neovim –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
install_neovim_config() {
    print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Neovim –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    mkdir -p "$HOME/.config/nvim"
    
    # –ö–æ–ø–∏—Ä—É–µ–º init.lua
    if [[ -f "$DOTFILES_DIR/nvim/.nvim.conf" ]]; then
        cp "$DOTFILES_DIR/nvim/.nvim.conf" "$HOME/.config/nvim/init.lua"
        print_success "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω init.lua"
    else
        print_error "–§–∞–π–ª nvim/.nvim.conf –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º lazy.nvim (–±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ)
    print_success "Neovim –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ (–ø–ª–∞–≥–∏–Ω—ã —É—Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ)"
}

# üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
install_additional_tools() {
    print_step "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã..."
    
    # fzf –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
    if command -v fzf &> /dev/null; then
        if [[ ! -f "$HOME/.fzf.zsh" ]]; then
            print_step "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º fzf –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é..."
            if [[ "$OS" == "macos" ]]; then
                $(brew --prefix)/opt/fzf/install --all --no-bash --no-fish
            else
                /usr/share/doc/fzf/examples/install --all --no-bash --no-fish 2>/dev/null || true
            fi
            print_success "fzf –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
        fi
    fi
    
    # –°–æ–∑–¥–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    if [[ ! -L "$HOME/.dotfiles" ]]; then
        ln -sf "$DOTFILES_DIR" "$HOME/.dotfiles"
        print_success "–°–æ–∑–¥–∞–Ω–∞ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ ~/.dotfiles"
    fi
}

# üéØ –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
final_setup() {
    print_step "–í—ã–ø–æ–ª–Ω—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É..."
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    chmod +x "$HOME/.dotfiles/setup.sh" 2>/dev/null || true
    
    # –°–æ–∑–¥–∞–µ–º –∞–ª–∏–∞—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    if ! grep -q "alias dotfiles-update" "$HOME/.zshrc" 2>/dev/null; then
        echo "" >> "$HOME/.zshrc"
        echo "# Dotfiles management" >> "$HOME/.zshrc"
        echo "alias dotfiles-update='cd ~/.dotfiles && git pull && ./setup.sh'" >> "$HOME/.zshrc"
        print_success "–î–æ–±–∞–≤–ª–µ–Ω –∞–ª–∏–∞—Å dotfiles-update"
    fi
    
    print_success "–§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# üìã –ü–æ–∫–∞–∑–∞—Ç—å –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
show_final_info() {
    print_header "üéâ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
    
    echo -e "${GREEN}–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:${NC}"
    echo -e "  ${CYAN}‚Ä¢${NC} Zsh —Å Oh My Zsh –∏ –∫–∞—Å—Ç–æ–º–Ω–æ–π —Ç–µ–º–æ–π minimal-git"
    echo -e "  ${CYAN}‚Ä¢${NC} Tmux —Å Catppuccin Mocha —Ç–µ–º–æ–π –∏ TPM –ø–ª–∞–≥–∏–Ω–∞–º–∏"
    echo -e "  ${CYAN}‚Ä¢${NC} Neovim IDE –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å LSP –∏ –ø–ª–∞–≥–∏–Ω–∞–º–∏"
    echo -e "  ${CYAN}‚Ä¢${NC} –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: eza, fzf, thefuck"
    
    echo -e "\n${YELLOW}–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
    echo -e "  ${CYAN}1.${NC} –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: ${BLUE}source ~/.zshrc${NC}"
    echo -e "  ${CYAN}2.${NC} –ó–∞–ø—É—Å—Ç–∏—Ç–µ tmux –∏ –Ω–∞–∂–º–∏—Ç–µ ${BLUE}Ctrl+s + I${NC} –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–ª–∞–≥–∏–Ω–æ–≤"
    echo -e "  ${CYAN}3.${NC} –û—Ç–∫—Ä–æ–π—Ç–µ nvim - –ø–ª–∞–≥–∏–Ω—ã —É—Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
    echo -e "  ${CYAN}4.${NC} –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ${BLUE}dotfiles-update${NC} –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π"
    
    if [[ -d "$BACKUP_DIR" ]]; then
        echo -e "\n${YELLOW}–ë—ç–∫–∞–ø —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π:${NC} $BACKUP_DIR"
    fi
    
    echo -e "\n${MAGENTA}–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∫—Ä–∞—Å–∏–≤–æ–π –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏! üöÄ${NC}"
}

# üöÄ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_header "üéØ –£–°–¢–ê–ù–û–í–ö–ê DOTFILES ETOZHEDEX"
    
    echo -e "${CYAN}–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç:${NC}"
    echo -e "  ‚Ä¢ Zsh —Å –∫–∞—Å—Ç–æ–º–Ω–æ–π —Ç–µ–º–æ–π –∏ –ø–ª–∞–≥–∏–Ω–∞–º–∏"
    echo -e "  ‚Ä¢ Tmux —Å –∫—Ä–∞—Å–∏–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π"
    echo -e "  ‚Ä¢ Neovim IDE —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –ø–ª–∞–≥–∏–Ω–∞–º–∏"
    echo -e "  ‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
    
    echo -e "\n${YELLOW}–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É? (y/N)${NC}"
    read -r response
    
    if [[ ! "$response" =~ ^[Yy]$ ]]; then
        print_warning "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
        exit 0
    fi
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
    detect_os
    install_package_manager
    install_dependencies
    backup_existing_configs
    install_oh_my_zsh
    install_zsh_config
    install_tmux_config
    install_neovim_config
    install_additional_tools
    final_setup
    show_final_info
}

# üé¨ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi